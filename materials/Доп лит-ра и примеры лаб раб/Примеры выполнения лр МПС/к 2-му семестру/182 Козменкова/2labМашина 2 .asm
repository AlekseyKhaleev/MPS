;Техническое задание                                    
;ЭВМ 2                                                           
; формат данных 8 бит с контролем по нечетности 
; адрес ВВ51-в раздельном с ЗУ адр. пространстве 
; прерывание от приемника ВВ51 вектор 7
; проверка идет по количеству символов

org 0
; Определение констант
const Reset 40h		; слово сброса 1000_0000
const word2 0fdh		; слово режима 1111_1101
const com 05h		; команда
const zond 0eeh		; код зонда 1110_1110
const MASKres 02h		; маска для бита готовности данных в приемнике
const MASKtran 04h		; маска для бита пустоты передатчика
const RegCom 01h		; регистр команд, регистр состояния
const RegData 00h		; регистр данных
const N 08h 		; количесвто символов в сообщениях

; установка вершины стэка
	lxi sp,0300h	
	jmp main
		
; таблица векторов прерываний
skip 38h			; адрес подпрограммы обслуживания RST.7 
	jmp RESIV	; подпрограмма передачи

skip 48h		; адрес ячеек после таблицы векторов

:main
;программирование ВВ51
	mvi a,Reset	; сброс контроллера
	out RegCom 	;
	mvi a,word2 	; задание режима
	out RegCom 	;	
	mvi a,com		; разрешение работы 
	out RegCom	;

;Проверка готовности
:EHO
	mvi a,zond	;проверим готовность 1-й машины, запустим зонд
	out RegData	;
:m1
	in RegCom	;читаем регистр состояния ВВ51
	ani MASKres 	;выделяем значение разряда готовности данных в приемнике
	jz m1 		;если 0, данных нет, ждем
	in RegData 	;иначе приемник получил от 1-й машины ЭХО, 
	cpi zond 		;сраниваем с зондом,
	jnz EHO		;не равно - отправлем снова, иначе начинам тансляцию


; дуплексный обмен
; подготовка
:DUPL			
	lxi h, data2	;в hl адрес 1-го байта исходных данных
	lxi d, lab1		;в be адрес 1-го байта я.п. для приема
	mvi c, 0h		;в с счетчик переданных символов
	mvi b, 0h		;в b счетчик принятых символов
	nop		;пустая операция

; программа передачи сообщения
:TRANS			
	in RegCom 	;читаем регистр состояния
	ani MASKtran	;проверяем передатчик
	;cpi 0h		;сравниваем с нулем
	jz TRANS		;если 0-занят, ждем 
	mov a,m		;иначе в аккумулятор символ
	out RegData	;отправить символ
	inx h		;инкремент адреса символа
	inr c		;инкремент счетчика переданных символов
	mov a,c		;номер символа в аккумулятор
	cpi N		;сравнить номер символа с последним
	jnz TRANS	;если не равно, продолжаем
:mm			;иначе конец и бесконечный цикл.
	ei		;разрешение прерывания
	mov a,b		;
	cpi N		;проверка счетчика принятых символов
	jnz mm		;не равно-продолжаем
	HLT  		;останов, если все приняли
; прием по прерыванию
:RESIV
	push psw		;
	push h		;
	mov h,d		;взял адрес символа из de
	mov l,e		;взял адрес символа из de
	in RegData	;прочитал символ
	mov m,a		;сохранил символ
	inx d		;инкремент адреса для символа
	inr b		;инкремент счетчика принятых символов
	pop h		;
	pop psw		;
	ei		;разрешение прерывания
	ret		;возврат из пп прерываний

;Данные для отправки
data2 db 041h,072h,074h,065h,06dh,0adh,0adh,0adh
; резервирум 8 ячеек памяти под входящее сообщение
lab1 dr 08h	
